// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	entity "github.com/hieronimusbudi/komodo-backend/entity"
	mock "github.com/stretchr/testify/mock"

	resterrors "github.com/hieronimusbudi/komodo-backend/framework/helpers/rest_errors"
)

// SellerRepository is an autogenerated mock type for the SellerRepository type
type SellerRepository struct {
	mock.Mock
}

// Delete provides a mock function with given fields: seller
func (_m *SellerRepository) Delete(seller *entity.Seller) resterrors.RestErr {
	ret := _m.Called(seller)

	var r0 resterrors.RestErr
	if rf, ok := ret.Get(0).(func(*entity.Seller) resterrors.RestErr); ok {
		r0 = rf(seller)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(resterrors.RestErr)
		}
	}

	return r0
}

// GetAll provides a mock function with given fields:
func (_m *SellerRepository) GetAll() ([]entity.Seller, resterrors.RestErr) {
	ret := _m.Called()

	var r0 []entity.Seller
	if rf, ok := ret.Get(0).(func() []entity.Seller); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entity.Seller)
		}
	}

	var r1 resterrors.RestErr
	if rf, ok := ret.Get(1).(func() resterrors.RestErr); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(resterrors.RestErr)
		}
	}

	return r0, r1
}

// GetByEmail provides a mock function with given fields: seller
func (_m *SellerRepository) GetByEmail(seller *entity.Seller) (entity.Seller, resterrors.RestErr) {
	ret := _m.Called(seller)

	var r0 entity.Seller
	if rf, ok := ret.Get(0).(func(*entity.Seller) entity.Seller); ok {
		r0 = rf(seller)
	} else {
		r0 = ret.Get(0).(entity.Seller)
	}

	var r1 resterrors.RestErr
	if rf, ok := ret.Get(1).(func(*entity.Seller) resterrors.RestErr); ok {
		r1 = rf(seller)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(resterrors.RestErr)
		}
	}

	return r0, r1
}

// GetByID provides a mock function with given fields: seller
func (_m *SellerRepository) GetByID(seller *entity.Seller) resterrors.RestErr {
	ret := _m.Called(seller)

	var r0 resterrors.RestErr
	if rf, ok := ret.Get(0).(func(*entity.Seller) resterrors.RestErr); ok {
		r0 = rf(seller)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(resterrors.RestErr)
		}
	}

	return r0
}

// Store provides a mock function with given fields: seller
func (_m *SellerRepository) Store(seller *entity.Seller) resterrors.RestErr {
	ret := _m.Called(seller)

	var r0 resterrors.RestErr
	if rf, ok := ret.Get(0).(func(*entity.Seller) resterrors.RestErr); ok {
		r0 = rf(seller)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(resterrors.RestErr)
		}
	}

	return r0
}

// Update provides a mock function with given fields: seller
func (_m *SellerRepository) Update(seller *entity.Seller) resterrors.RestErr {
	ret := _m.Called(seller)

	var r0 resterrors.RestErr
	if rf, ok := ret.Get(0).(func(*entity.Seller) resterrors.RestErr); ok {
		r0 = rf(seller)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(resterrors.RestErr)
		}
	}

	return r0
}
