// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	entity "github.com/hieronimusbudi/komodo-backend/entity"
	mock "github.com/stretchr/testify/mock"

	resterrors "github.com/hieronimusbudi/komodo-backend/framework/helpers/rest_errors"
)

// BuyerRepository is an autogenerated mock type for the BuyerRepository type
type BuyerRepository struct {
	mock.Mock
}

// Delete provides a mock function with given fields: buyer
func (_m *BuyerRepository) Delete(buyer *entity.Buyer) resterrors.RestErr {
	ret := _m.Called(buyer)

	var r0 resterrors.RestErr
	if rf, ok := ret.Get(0).(func(*entity.Buyer) resterrors.RestErr); ok {
		r0 = rf(buyer)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(resterrors.RestErr)
		}
	}

	return r0
}

// GetAll provides a mock function with given fields:
func (_m *BuyerRepository) GetAll() ([]entity.Buyer, resterrors.RestErr) {
	ret := _m.Called()

	var r0 []entity.Buyer
	if rf, ok := ret.Get(0).(func() []entity.Buyer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entity.Buyer)
		}
	}

	var r1 resterrors.RestErr
	if rf, ok := ret.Get(1).(func() resterrors.RestErr); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(resterrors.RestErr)
		}
	}

	return r0, r1
}

// GetByEmail provides a mock function with given fields: buyer
func (_m *BuyerRepository) GetByEmail(buyer *entity.Buyer) (entity.Buyer, resterrors.RestErr) {
	ret := _m.Called(buyer)

	var r0 entity.Buyer
	if rf, ok := ret.Get(0).(func(*entity.Buyer) entity.Buyer); ok {
		r0 = rf(buyer)
	} else {
		r0 = ret.Get(0).(entity.Buyer)
	}

	var r1 resterrors.RestErr
	if rf, ok := ret.Get(1).(func(*entity.Buyer) resterrors.RestErr); ok {
		r1 = rf(buyer)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(resterrors.RestErr)
		}
	}

	return r0, r1
}

// GetByID provides a mock function with given fields: buyer
func (_m *BuyerRepository) GetByID(buyer *entity.Buyer) resterrors.RestErr {
	ret := _m.Called(buyer)

	var r0 resterrors.RestErr
	if rf, ok := ret.Get(0).(func(*entity.Buyer) resterrors.RestErr); ok {
		r0 = rf(buyer)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(resterrors.RestErr)
		}
	}

	return r0
}

// Store provides a mock function with given fields: buyer
func (_m *BuyerRepository) Store(buyer *entity.Buyer) resterrors.RestErr {
	ret := _m.Called(buyer)

	var r0 resterrors.RestErr
	if rf, ok := ret.Get(0).(func(*entity.Buyer) resterrors.RestErr); ok {
		r0 = rf(buyer)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(resterrors.RestErr)
		}
	}

	return r0
}

// Update provides a mock function with given fields: buyer
func (_m *BuyerRepository) Update(buyer *entity.Buyer) resterrors.RestErr {
	ret := _m.Called(buyer)

	var r0 resterrors.RestErr
	if rf, ok := ret.Get(0).(func(*entity.Buyer) resterrors.RestErr); ok {
		r0 = rf(buyer)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(resterrors.RestErr)
		}
	}

	return r0
}
